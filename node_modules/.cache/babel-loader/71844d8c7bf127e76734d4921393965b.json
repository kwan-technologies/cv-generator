{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Held\\\\school_fees\\\\mantis-free-react-admin-template\\\\src\\\\components\\\\@extended\\\\AnimateButton.js\";\nimport PropTypes from 'prop-types';\n\n// third-party\nimport { motion } from 'framer-motion';\n\n// ==============================|| ANIMATION BUTTON ||============================== //\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AnimateButton(_ref) {\n  let {\n    children,\n    type\n  } = _ref;\n  switch (type) {\n    case 'rotate': // only available in paid version\n    case 'slide': // only available in paid version\n    case 'scale': // only available in paid version\n    default:\n      return /*#__PURE__*/_jsxDEV(motion.div, {\n        whileHover: {\n          scale: 1\n        },\n        whileTap: {\n          scale: 0.9\n        },\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this);\n  }\n}\n_c = AnimateButton;\nAnimateButton.propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.oneOf(['slide', 'scale', 'rotate'])\n};\nAnimateButton.defaultProps = {\n  type: 'scale'\n};\nvar _c;\n$RefreshReg$(_c, \"AnimateButton\");","map":{"version":3,"names":["PropTypes","motion","AnimateButton","children","type","scale","propTypes","node","oneOf","defaultProps"],"sources":["C:/Users/user/Desktop/Held/school_fees/mantis-free-react-admin-template/src/components/@extended/AnimateButton.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\n\r\n// third-party\r\nimport { motion } from 'framer-motion';\r\n\r\n// ==============================|| ANIMATION BUTTON ||============================== //\r\n\r\nexport default function AnimateButton({ children, type }) {\r\n    switch (type) {\r\n        case 'rotate': // only available in paid version\r\n        case 'slide': // only available in paid version\r\n        case 'scale': // only available in paid version\r\n        default:\r\n            return (\r\n                <motion.div whileHover={{ scale: 1 }} whileTap={{ scale: 0.9 }}>\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n    }\r\n}\r\n\r\nAnimateButton.propTypes = {\r\n    children: PropTypes.node,\r\n    type: PropTypes.oneOf(['slide', 'scale', 'rotate'])\r\n};\r\n\r\nAnimateButton.defaultProps = {\r\n    type: 'scale'\r\n};\r\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,YAAY;;AAElC;AACA,SAASC,MAAM,QAAQ,eAAe;;AAEtC;AAAA;AAEA,eAAe,SAASC,aAAa,OAAqB;EAAA,IAApB;IAAEC,QAAQ;IAAEC;EAAK,CAAC;EACpD,QAAQA,IAAI;IACR,KAAK,QAAQ,CAAC,CAAC;IACf,KAAK,OAAO,CAAC,CAAC;IACd,KAAK,OAAO,CAAC,CAAC;IACd;MACI,oBACI,QAAC,MAAM,CAAC,GAAG;QAAC,UAAU,EAAE;UAAEC,KAAK,EAAE;QAAE,CAAE;QAAC,QAAQ,EAAE;UAAEA,KAAK,EAAE;QAAI,CAAE;QAAA,UAC1DF;MAAQ;QAAA;QAAA;QAAA;MAAA,QACA;EACf;AAEd;AAAC,KAZuBD,aAAa;AAcrCA,aAAa,CAACI,SAAS,GAAG;EACtBH,QAAQ,EAAEH,SAAS,CAACO,IAAI;EACxBH,IAAI,EAAEJ,SAAS,CAACQ,KAAK,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,CAAC;AACtD,CAAC;AAEDN,aAAa,CAACO,YAAY,GAAG;EACzBL,IAAI,EAAE;AACV,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module"}